Index: .idea/compiler.xml
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
deleted file mode 100644
--- a/.idea/compiler.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ /dev/null	(revision 9494f1800498923ba54eca0808cb15f01050661c)
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CompilerConfiguration">
-    <annotationProcessing>
-      <profile default="true" name="Default" enabled="true" />
-      <profile name="Maven default annotation processors profile" enabled="true">
-        <sourceOutputDir name="target/generated-sources/annotations" />
-        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
-        <outputRelativeToContentRoot value="true" />
-        <module name="UserService" />
-      </profile>
-    </annotationProcessing>
-  </component>
-  <component name="JavacSettings">
-    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
-      <module name="UserService" options="-parameters" />
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
deleted file mode 100644
--- a/.idea/jarRepositories.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ /dev/null	(revision 9494f1800498923ba54eca0808cb15f01050661c)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RemoteRepositoriesConfiguration">
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Central Repository" />
-      <option name="url" value="https://repo.maven.apache.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Maven Central repository" />
-      <option name="url" value="https://repo1.maven.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="jboss.community" />
-      <option name="name" value="JBoss Community repository" />
-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
-    </remote-repository>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/encodings.xml
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
deleted file mode 100644
--- a/.idea/encodings.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ /dev/null	(revision 9494f1800498923ba54eca0808cb15f01050661c)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Encoding">
-    <file url="file://$PROJECT_DIR$/UserService/src/main/java" charset="UTF-8" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/workspace.xml
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
deleted file mode 100644
--- a/.idea/workspace.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ /dev/null	(revision 9494f1800498923ba54eca0808cb15f01050661c)
@@ -1,144 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="AutoImportSettings">
-    <option name="autoReloadType" value="SELECTIVE" />
-  </component>
-  <component name="ChangeListManager">
-    <list default="true" id="4eb74f4c-b9db-4bc1-8c2e-dfb5442f204c" name="更改" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/DL2.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/maven_wrapper.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CrawlerService/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/CrawlerService/src/index.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Neo4jService/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/Neo4jService/src/main/resources/application.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/frontend/src/app/paper/paper.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/paper/paper.component.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/frontend/src/app/paper/paper.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/paper/paper.component.ts" afterDir="false" />
-    </list>
-    <option name="SHOW_DIALOG" value="false" />
-    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-    <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="Git.Settings">
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-  </component>
-  <component name="HighlightingSettingsPerFile">
-    <setting file="mock:///AIAssistantSnippet" root0="ESSENTIAL" />
-  </component>
-  <component name="MarkdownSettingsMigration">
-    <option name="stateVersion" value="1" />
-  </component>
-  <component name="ProjectId" id="2ShghbYBHnYp3i9zBoaeDd3HGO3" />
-  <component name="ProjectViewState">
-    <option name="hideEmptyMiddlePackages" value="true" />
-    <option name="showLibraryContents" value="true" />
-  </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "main",
-    "jdk.selected.JAVA_MODULE": "17",
-    "last_opened_file_path": "/home/chan/Documents/Code/DL2/UserService",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Project",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.0",
-    "settings.editor.selected.configurable": "preferences.general",
-    "spring.configuration.checksum": "79716315e5509ee9e9c583b3d0f9f0a1",
-    "ts.external.directory.path": "/home/chan/Documents/Code/DL2/frontend/node_modules/typescript/lib",
-    "vue.rearranger.settings.migration": "true"
-  }
-}]]></component>
-  <component name="RunManager" selected="Application.UserServiceApplication">
-    <configuration name="UserServiceApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="com.dl2.userservice.UserServiceApplication" />
-      <module name="UserService" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="com.dl2.userservice.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="Angular Application" type="JavascriptDebugType" uri="http://localhost:4200">
-      <method v="2" />
-    </configuration>
-    <configuration name="Angular CLI Server" type="js.build_tools.npm">
-      <package-json value="$PROJECT_DIR$/frontend/package.json" />
-      <command value="run" />
-      <scripts>
-        <script value="start" />
-      </scripts>
-      <node-interpreter value="project" />
-      <envs />
-      <method v="2" />
-    </configuration>
-    <list>
-      <item itemvalue="Application.UserServiceApplication" />
-      <item itemvalue="JavaScript Debug.Angular Application" />
-      <item itemvalue="npm.Angular CLI Server" />
-    </list>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Application.UserServiceApplication" />
-      </list>
-    </recent_temporary>
-  </component>
-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
-  <component name="TaskManager">
-    <task active="true" id="Default" summary="默认任务">
-      <changelist id="4eb74f4c-b9db-4bc1-8c2e-dfb5442f204c" name="更改" comment="" />
-      <created>1689604347312</created>
-      <option name="number" value="Default" />
-      <option name="presentableId" value="Default" />
-      <updated>1689604347312</updated>
-      <workItem from="1689604348339" duration="623000" />
-      <workItem from="1689605004767" duration="1255000" />
-      <workItem from="1689606635427" duration="190000" />
-      <workItem from="1689606853339" duration="756000" />
-      <workItem from="1689608104678" duration="386000" />
-      <workItem from="1689608971693" duration="1688000" />
-      <workItem from="1689661962261" duration="855000" />
-      <workItem from="1689665517914" duration="987000" />
-      <workItem from="1689666511143" duration="453000" />
-      <workItem from="1689666976410" duration="30000" />
-      <workItem from="1689667023304" duration="20000" />
-      <workItem from="1689667084970" duration="44000" />
-      <workItem from="1689667135229" duration="138000" />
-      <workItem from="1689790664130" duration="765000" />
-      <workItem from="1689791464718" duration="595000" />
-    </task>
-    <servers />
-  </component>
-  <component name="TypeScriptGeneratedFilesManager">
-    <option name="version" value="3" />
-  </component>
-  <component name="UnknownFeatures">
-    <option featureType="com.intellij.fileTypeFactory" implementationName="angular.json" />
-  </component>
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/libraries/maven_wrapper.xml
===================================================================
diff --git a/.idea/libraries/maven_wrapper.xml b/.idea/libraries/maven_wrapper.xml
deleted file mode 100644
--- a/.idea/libraries/maven_wrapper.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ /dev/null	(revision 9494f1800498923ba54eca0808cb15f01050661c)
@@ -1,9 +0,0 @@
-<component name="libraryTable">
-  <library name="maven-wrapper">
-    <CLASSES>
-      <root url="jar://$PROJECT_DIR$/UserService/.mvn/wrapper/maven-wrapper.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
Index: .idea/aws.xml
===================================================================
diff --git a/.idea/aws.xml b/.idea/aws.xml
deleted file mode 100644
--- a/.idea/aws.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ /dev/null	(revision 9494f1800498923ba54eca0808cb15f01050661c)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="accountSettings">
-    <option name="activeRegion" value="us-east-1" />
-    <option name="recentlyUsedRegions">
-      <list>
-        <option value="us-east-1" />
-      </list>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: frontend/src/app/personal/personal.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><app-topbar />\r\n<div class=\"main\">\r\n  <h1>\r\n    <span class=\"greeting\">Welcome home, </span>\r\n    <span class=\"name\">{{ this.name }}</span\r\n    >!\r\n  </h1>\r\n  <div class=\"recommend\">\r\n    <h2>For You!</h2>\r\n    <app-paper-info\r\n      [papers]=\"recommends\"\r\n      [accent]=\"true\"\r\n      *ngIf=\"recommends.length\"\r\n    />\r\n    <div class=\"empty\" (click)=\"gotoMain()\" *ngIf=\"!recommends.length\">\r\n      No recommendations. Go check more papers!\r\n    </div>\r\n  </div>\r\n  <div class=\"recent\">\r\n    <h2>Recent Viewed on ArXiv</h2>\r\n    <app-paper-info [papers]=\"recents\" *ngIf=\"recents.length\" />\r\n    <div class=\"empty\" (click)=\"gotoMain()\" *ngIf=\"!recents.length\">\r\n      No views found. Go check some papers!\r\n    </div>\r\n  </div>\r\n  <div class=\"favs\">\r\n    <h2>Recent Favorites</h2>\r\n    <app-paper-info [papers]=\"favs\" *ngIf=\"favs.length\" />\r\n    <div class=\"empty\" (click)=\"gotoMain()\" *ngIf=\"!favs.length\">\r\n      No favorites found. Go check some papers!\r\n    </div>\r\n  </div>\r\n</div>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/personal/personal.component.html b/frontend/src/app/personal/personal.component.html
--- a/frontend/src/app/personal/personal.component.html	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/personal/personal.component.html	(date 1689856887390)
@@ -4,6 +4,7 @@
     <span class="greeting">Welcome home, </span>
     <span class="name">{{ this.name }}</span
     >!
+    <span class="config" (click)="gotoSelect()">Perferences Config</span>
   </h1>
   <div class="recommend">
     <h2>For You!</h2>
Index: frontend/src/app/personal/personal.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport axios from 'axios';\r\nimport { ServerService } from '../server.service';\r\nimport GenericResponse from '../GenericResponse.model';\r\nimport Paper from '../paper/paper.model';\r\nimport Recommendation, { SortedRecommendation } from './Recommendation.model';\r\n\r\n@Component({\r\n  selector: 'app-personal',\r\n  templateUrl: './personal.component.html',\r\n  styleUrls: ['./personal.component.scss'],\r\n})\r\nexport class PersonalComponent {\r\n  private authorized = this.authService.isAuthenticated();\r\n  public name = this.authService.getToken()?.name;\r\n  public recents: Paper[] = [];\r\n  public favs: Paper[] = [];\r\n  public recommends: Paper[] = [];\r\n\r\n  public constructor(private authService: AuthService) {}\r\n\r\n  async ngOnInit() {\r\n    if (!this.authorized) window.location.href = '/login';\r\n    await this.getRecent();\r\n    await this.getRecommends();\r\n  }\r\n\r\n  private async getRecent() {\r\n    const resp = await axios.post(ServerService.LoginServer + '/user/recent', {\r\n      jwt: localStorage.getItem('access_token'),\r\n    });\r\n    const data: GenericResponse<any> = resp.data;\r\n    if (data.code !== 200) {\r\n      window.location.href = '/login';\r\n      return;\r\n    }\r\n    this.recents = data.data.recent;\r\n    this.favs = data.data.favourite;\r\n  }\r\n\r\n  private async getRecommends() {\r\n    const arxivIds = this.recents.map((paper) => paper.arxivId);\r\n    const resp = await axios.post(\r\n      ServerService.N4JServer + '/paper/nearbyPaper',\r\n      {\r\n        arxivId: arxivIds,\r\n      }\r\n    );\r\n    const data: GenericResponse<Recommendation> = resp.data;\r\n    let sortedRecommendations: SortedRecommendation[] = [];\r\n    data.data.arxivId.forEach((arxivId, i) => {\r\n      sortedRecommendations.push({\r\n        arxivId,\r\n        citations: data.data.citations[i],\r\n      });\r\n    });\r\n    // sort by citations descending\r\n    sortedRecommendations = sortedRecommendations\r\n      .sort((a, b) => b.citations - a.citations)\r\n      .slice(0, 5);\r\n    const paperResp = await axios.post(\r\n      ServerService.LoginServer + '/paper/papers',\r\n      {\r\n        arxivId: sortedRecommendations.map(\r\n          (recommendation) => recommendation.arxivId\r\n        ),\r\n      }\r\n    );\r\n    const paperData: GenericResponse<Paper[]> = paperResp.data;\r\n    this.recommends = paperData.data;\r\n  }\r\n\r\n  gotoMain() {\r\n    window.location.href = '/';\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/personal/personal.component.ts b/frontend/src/app/personal/personal.component.ts
--- a/frontend/src/app/personal/personal.component.ts	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/personal/personal.component.ts	(date 1689856886193)
@@ -1,5 +1,6 @@
 import { Component } from '@angular/core';
 import { AuthService } from '../auth.service';
+import { Router } from '@angular/router';
 import axios from 'axios';
 import { ServerService } from '../server.service';
 import GenericResponse from '../GenericResponse.model';
@@ -18,7 +19,7 @@
   public favs: Paper[] = [];
   public recommends: Paper[] = [];
 
-  public constructor(private authService: AuthService) {}
+  public constructor(private authService: AuthService, private router: Router) {}
 
   async ngOnInit() {
     if (!this.authorized) window.location.href = '/login';
@@ -70,7 +71,9 @@
     const paperData: GenericResponse<Paper[]> = paperResp.data;
     this.recommends = paperData.data;
   }
-
+  gotoSelect(){
+    this.router.navigate(['/after']);
+  }
   gotoMain() {
     window.location.href = '/';
   }
Index: frontend/src/app/paper/paper.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>main {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 80vw;\r\n  left: 10vw;\r\n  top: 10vh;\r\n  align-items: flex-start;\r\n  justify-self: unset;\r\n  min-height: 200vh;\r\n}\r\n\r\n\r\nh1,\r\nh2 {\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n  letter-spacing: -.5px;\r\n}\r\n\r\nh1 {\r\n  font-size: 1.8em;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.4em;\r\n}\r\n\r\n.arxiv-and-star {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  .arxiv-id {\r\n    margin-right: 1em;\r\n  }\r\n}\r\n\r\n.colorized {\r\n  color: royalblue;\r\n}\r\n\r\n.arxiv-id {\r\n  font-size: .9em;\r\n  color: #777;\r\n  text-decoration: underline;\r\n  transition: all .3s ease-out;\r\n\r\n  &:hover {\r\n    color: royalblue;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.author i {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  transition: all .2s ease-out;\r\n\r\n  &:hover {\r\n    color: royalblue;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.tasks .task,\r\n.methods .method {\r\n\r\n  .task-name,\r\n  .method-name {\r\n    font-size: 1.1em;\r\n    margin-left: .5em;\r\n  }\r\n}\r\n\r\n.codes {\r\n  font-size: 1.1em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  .code {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: .5em 0;\r\n\r\n    .url {\r\n      color: #777;\r\n      text-decoration: none;\r\n      transition: all .2s ease-out;\r\n      &:hover {\r\n        color: royalblue;\r\n        cursor: pointer;\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n\r\n    .rating {\r\n      margin-left: 1em;\r\n    }\r\n  }\r\n}\r\n\r\nmat-chip-listbox {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  mat-basic-chip {\r\n    margin: .5em !important;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/paper/paper.component.scss b/frontend/src/app/paper/paper.component.scss
--- a/frontend/src/app/paper/paper.component.scss	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/paper/paper.component.scss	(date 1689841181307)
@@ -102,13 +102,17 @@
   }
 }
 
-mat-chip-listbox {
+.pop-content {
   display: flex;
   flex-direction: row;
   align-items: center;
   justify-content: flex-start;
-
-  mat-basic-chip {
-    margin: .5em !important;
+  flex-wrap: wrap;
+  span {
+    transition: all .3s ease-out;
+    &:hover {
+      transform: scale(1.05);
+      cursor: pointer;
+    }
   }
 }
Index: frontend/src/app/paper/paper.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><app-loading *ngIf=\"this.loading\"></app-loading>\r\n<app-topbar *ngIf=\"!this.loading\" />\r\n<main *ngIf=\"!this.loading\" class=\"container\">\r\n  <h1 [innerHTML]=\"this.paper.title | highlightCapitalized : 'royalblue'\"></h1>\r\n  <span class=\"arxiv-and-star\">\r\n    <i class=\"arxiv-id\" (click)=\"gotoArxiv()\"\r\n      >arxiv: {{ this.paper.arxivId }}</i\r\n    >\r\n    <button (click)=\"toggleFav()\" *ngIf=\"this.authorized\">\r\n      <mat-icon\r\n        *ngIf=\"!fav\"\r\n        [style]=\"{\r\n          color: '#ccc'\r\n        }\"\r\n        >star_border</mat-icon\r\n      >\r\n      <mat-icon\r\n        *ngIf=\"fav\"\r\n        [style]=\"{\r\n          color: 'gold'\r\n        }\"\r\n        >star</mat-icon\r\n      >\r\n    </button>\r\n  </span>\r\n  <p class=\"abs\">{{ this.paper.abs }}</p>\r\n  <div class=\"authors\">\r\n    <h2 class=\"title\">Authors</h2>\r\n    <span *ngFor=\"let author of this.paper.authors; index as i\" class=\"author\">\r\n      <i>{{ author }}</i\r\n      ><span *ngIf=\"i != this.paper.authors.length - 1\">, </span>\r\n    </span>\r\n  </div>\r\n  <div class=\"tasks\" *ngIf=\"this.paper.tasks.taskName.length\">\r\n    <h2 class=\"title\">Tasks</h2>\r\n    <mat-chip-listbox>\r\n      <mat-basic-chip\r\n        *ngFor=\"let task of this.paper.tasks.taskName; index as i\"\r\n        class=\"task\"\r\n        [ngStyle]=\"{\r\n          background: this.paper.taskColors[i],\r\n          color: 'whitesmoke',\r\n          padding: '0.5rem 0.8rem',\r\n          margin: '0 0.5rem',\r\n          'border-radius': '2rem'\r\n        }\"\r\n      >\r\n        {{ task }}\r\n      </mat-basic-chip>\r\n    </mat-chip-listbox>\r\n  </div>\r\n  <div class=\"methods\" *ngIf=\"this.paper.methods.methodName.length\">\r\n    <h2 class=\"title\">Methods</h2>\r\n    <mat-chip-listbox>\r\n      <mat-basic-chip\r\n        *ngFor=\"let method of this.paper.methods.methodName; index as i\"\r\n        class=\"method\"\r\n        [ngStyle]=\"{\r\n          background: this.paper.methodColors[i],\r\n          color: 'whitesmoke',\r\n          padding: '0.5rem 0.8rem',\r\n          margin: '0.5rem',\r\n          'border-radius': '2rem'\r\n        }\"\r\n      >\r\n        {{ method }}\r\n      </mat-basic-chip>\r\n    </mat-chip-listbox>\r\n  </div>\r\n  <div class=\"codes\">\r\n    <h2 class=\"title\">Codes</h2>\r\n    <div *ngFor=\"let task of this.paper.codes; index as i\" class=\"code\">\r\n      <a class=\"url\" [href]=\"task.url\" [innerHTML]=\"task.shortened\"></a>\r\n      <div class=\"rating\">{{ task.rating }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"related\" *ngIf=\"this.relatedPapers.length\">\r\n    <h2 class=\"title\">Related Papers</h2>\r\n    <app-paper-info [papers]=\"this.relatedPapers\"></app-paper-info>\r\n  </div>\r\n</main>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/paper/paper.component.html b/frontend/src/app/paper/paper.component.html
--- a/frontend/src/app/paper/paper.component.html	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/paper/paper.component.html	(date 1689841313638)
@@ -33,39 +33,40 @@
   </div>
   <div class="tasks" *ngIf="this.paper.tasks.taskName.length">
     <h2 class="title">Tasks</h2>
-    <mat-chip-listbox>
-      <mat-basic-chip
+    <div class="pop-content">
+      <span
         *ngFor="let task of this.paper.tasks.taskName; index as i"
-        class="task"
         [ngStyle]="{
-          background: this.paper.taskColors[i],
+          background: paper.methodColors[i],
           color: 'whitesmoke',
           padding: '0.5rem 0.8rem',
-          margin: '0 0.5rem',
+          margin: '0.5rem',
           'border-radius': '2rem'
         }"
+        (click)="gotoTask(task)"
       >
         {{ task }}
-      </mat-basic-chip>
-    </mat-chip-listbox>
+      </span>
+    </div>
   </div>
   <div class="methods" *ngIf="this.paper.methods.methodName.length">
     <h2 class="title">Methods</h2>
-    <mat-chip-listbox>
-      <mat-basic-chip
+
+    <div class="pop-content">
+      <span
         *ngFor="let method of this.paper.methods.methodName; index as i"
-        class="method"
         [ngStyle]="{
-          background: this.paper.methodColors[i],
+          background: paper.methodColors[i],
           color: 'whitesmoke',
           padding: '0.5rem 0.8rem',
           margin: '0.5rem',
           'border-radius': '2rem'
         }"
+        (click)="gotoMethod(method)"
       >
         {{ method }}
-      </mat-basic-chip>
-    </mat-chip-listbox>
+      </span>
+    </div>
   </div>
   <div class="codes">
     <h2 class="title">Codes</h2>
Index: frontend/src/app/tasks/tasks.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>app-topbar {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.methods {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  top: 10vw;\r\n  left: 10vw;\r\n  width: 80vw;\r\n\r\n  .method {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin: 1em 0;\r\n    padding: 0 1em;\r\n    background: rgba($color: #ddd, $alpha: 0.4);\r\n    transition: all .3s ease-out;\r\n    &:hover {\r\n      box-shadow: 2px 2px 2px 0px gray;\r\n      transform: scale(1.05);\r\n      cursor: pointer;\r\n    }\r\n\r\n    h2 {\r\n      font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n\r\n      span {\r\n        font-size: .7em;\r\n        font-weight: normal;\r\n        color: #aaa;\r\n      }\r\n    }\r\n\r\n    .pop-title {\r\n      font-size: 1.2em;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .pop {\r\n      font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    }\r\n\r\n    markdown {\r\n      font-family: Georgia, 'Times New Roman', Times, serif\r\n    }\r\n  }\r\n}\r\n\r\nmat-paginator {\r\n  width: 100vw;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 100;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/tasks/tasks.component.scss b/frontend/src/app/tasks/tasks.component.scss
--- a/frontend/src/app/tasks/tasks.component.scss	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/tasks/tasks.component.scss	(date 1689838593425)
@@ -14,6 +14,7 @@
   top: 10vw;
   left: 10vw;
   width: 80vw;
+  padding-bottom: 15vw;
 
   .method {
     display: flex;
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/UserService/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_20\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/UserService/target\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/.idea/misc.xml	(date 1689857974607)
@@ -1,14 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/UserService/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" project-jdk-name="17" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/UserService/target" />
+  <component name="JsBuildToolPackageJson" sorting="DEFINITION_ORDER" />
+  <component name="ProjectRootManager">
+    <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: frontend/src/app/paper/paper.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport Paper from './paper.model';\r\nimport axios from 'axios';\r\nimport { ServerService } from '../server.service';\r\nimport GenericResponse from '../GenericResponse.model';\r\nimport { AuthService } from '../auth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport Recommendation, { SortedRecommendation } from '../personal/Recommendation.model';\r\n\r\n@Component({\r\n  selector: 'app-paper',\r\n  templateUrl: './paper.component.html',\r\n  styleUrls: ['./paper.component.scss'],\r\n})\r\nexport class PaperComponent implements OnInit {\r\n  public id!: string;\r\n  public paper!: Paper;\r\n  public loading = false;\r\n  public fav = false;\r\n  public relatedPapers: Paper[] = [];\r\n  public authorized = this.authService.isAuthenticated();\r\n  @ViewChild('title')\r\n  public titleElement!: ElementRef<HTMLHeadElement>;\r\n\r\n  public constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  private async getFav() {\r\n    const res = await axios.post<GenericResponse<boolean>>(\r\n      ServerService.LoginServer + `/user/get_favourite`,\r\n      {\r\n        jwt: localStorage.getItem('access_token'),\r\n        paperId: this.id,\r\n      }\r\n    );\r\n    if (res.data.code !== 200) {\r\n      return;\r\n    }\r\n    this.fav = res.data.data;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.route.params.subscribe(async (params) => {\r\n      this.id = params['id'];\r\n      await Promise.all([this.getFav(), this.getPaper()]);\r\n      const maxNumTasks = Math.max(...this.paper.tasks.numPapers);\r\n      const minNumTasks = Math.min(...this.paper.tasks.numPapers);\r\n      const maxNumMethods = Math.max(...this.paper.methods.numPapers);\r\n      const minNumMethods = Math.min(...this.paper.methods.numPapers);\r\n      // linearly map the number of papers from color(#FF4500) into color(#1E90FF)\r\n      this.paper.taskColors = this.paper.tasks.numPapers.map((numPapers) => {\r\n        if (maxNumTasks === minNumTasks) {\r\n          return 'rgba(30, 144, 255, 0.85)';\r\n        }\r\n        const ratio = (numPapers - minNumTasks) / (maxNumTasks - minNumTasks);\r\n        const r = Math.round(30 + (255 - 30) * ratio);\r\n        const g = Math.round(144 + (69 - 144) * ratio);\r\n        const b = Math.round(255 + (0 - 255) * ratio);\r\n        return `rgba(${r}, ${g}, ${b}, 0.85)`;\r\n      });\r\n      this.paper.methodColors = this.paper.methods.numPapers.map(\r\n        (numPapers) => {\r\n          if (maxNumMethods === minNumMethods) {\r\n            return 'rgba(30, 144, 255, 0.85)';\r\n          }\r\n          const ratio =\r\n            (numPapers - minNumMethods) / (maxNumMethods - minNumMethods);\r\n          const r = Math.round(30 + (255 - 30) * ratio);\r\n          const g = Math.round(144 + (69 - 144) * ratio);\r\n          const b = Math.round(255 + (0 - 255) * ratio);\r\n          return `rgba(${r}, ${g}, ${b}, 0.85)`;\r\n        }\r\n      );\r\n      this.paper.codes = this.paper.codes.slice(0, 10).map((code) => {\r\n        const shortened = code.url.split('/').splice(-2, 2);\r\n        shortened[1] = '<span class=\"short\">' + shortened[1] + '</span>';\r\n        return {\r\n          url: code.url,\r\n          shortened: shortened.join('/'),\r\n          rating: code.rating,\r\n        };\r\n      });\r\n      await this.getRelatedPapers();\r\n    });\r\n  }\r\n\r\n  private async getPaper() {\r\n    this.loading = true;\r\n    const res = await axios.get<GenericResponse<Paper>>(\r\n      ServerService.LoginServer + `/paper/${this.id}`\r\n    );\r\n    if (res.status !== 200) {\r\n      this.router.navigate(['/404']);\r\n    }\r\n    this.paper = res.data.data;\r\n    this.loading = false;\r\n  }\r\n\r\n  public async toggleFav() {\r\n    this.fav = !this.fav;\r\n    const res = await axios.post<GenericResponse<any>>(\r\n      this.fav\r\n        ? ServerService.LoginServer + `/user/favourite`\r\n        : ServerService.LoginServer + `/user/unfavourite`,\r\n      {\r\n        jwt: localStorage.getItem('access_token'),\r\n        paperId: this.id,\r\n      }\r\n    );\r\n    if (res.data.code !== 200) {\r\n      this.snackBar.open(res.data.message, 'Close', {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n    if (this.fav) {\r\n      this.snackBar.open('Added to favourites', 'Close', {\r\n        duration: 3000,\r\n      });\r\n    } else {\r\n      this.snackBar.open('Removed from favourites', 'Close', {\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }\r\n\r\n  public async gotoArxiv() {\r\n    if (this.authorized) {\r\n      const resp = await axios.post<GenericResponse<any>>(\r\n        ServerService.LoginServer + `/user/record_viewed`,\r\n        {\r\n          jwt: localStorage.getItem('access_token'),\r\n          paperId: this.id,\r\n        }\r\n      );\r\n      if (resp.data.code !== 200) {\r\n        this.snackBar.open(resp.data.message, 'Close', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    }\r\n    const arxivId = this.paper.arxivId;\r\n    const url = `https://arxiv.org/abs/${arxivId}`;\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  private async getRelatedPapers() {\r\n    const resp = await axios.post(\r\n      ServerService.N4JServer + '/paper/nearbyPaper',\r\n      {\r\n        arxivId: [this.id],\r\n      }\r\n    );\r\n    const data: GenericResponse<Recommendation> = resp.data;\r\n    let sortedRecommendations: SortedRecommendation[] = [];\r\n    data.data.arxivId.forEach((arxivId, i) => {\r\n      sortedRecommendations.push({\r\n        arxivId,\r\n        citations: data.data.citations[i],\r\n      });\r\n    });\r\n    // sort by citations descending\r\n    sortedRecommendations = sortedRecommendations\r\n      .sort((a, b) => b.citations - a.citations)\r\n      .slice(0, 5);\r\n    const paperResp = await axios.post(\r\n      ServerService.LoginServer + '/paper/papers',\r\n      {\r\n        arxivId: sortedRecommendations.map(\r\n          (recommendation) => recommendation.arxivId\r\n        ),\r\n      }\r\n    );\r\n    const paperData: GenericResponse<Paper[]> = paperResp.data;\r\n    this.relatedPapers = paperData.data;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/paper/paper.component.ts b/frontend/src/app/paper/paper.component.ts
--- a/frontend/src/app/paper/paper.component.ts	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/paper/paper.component.ts	(date 1689841183900)
@@ -149,6 +149,14 @@
     window.open(url, '_blank');
   }
 
+  gotoMethod(method: string) {
+    window.location.pathname = `/method/${method}`;
+  }
+
+  gotoTask(task: string) {
+    window.location.pathname = `/task/${task}`;
+  }
+
   private async getRelatedPapers() {
     const resp = await axios.post(
       ServerService.N4JServer + '/paper/nearbyPaper',
Index: UserService/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.jpa.hibernate.ddl-auto=update\r\nspring.datasource.url=jdbc:mariadb://localhost:3306/dl2\r\nspring.datasource.username=chan\r\nspring.datasource.password=030108\r\nspring.datasource.driver-class-name=org.mariadb.jdbc.Driver
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/UserService/src/main/resources/application.properties b/UserService/src/main/resources/application.properties
--- a/UserService/src/main/resources/application.properties	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/UserService/src/main/resources/application.properties	(date 1689824734634)
@@ -1,5 +1,5 @@
 spring.jpa.hibernate.ddl-auto=update
-spring.datasource.url=jdbc:mariadb://localhost:3306/dl2
-spring.datasource.username=chan
-spring.datasource.password=030108
-spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
\ No newline at end of file
+spring.datasource.url=jdbc:mysql://localhost:3306/dl2
+spring.datasource.username=root
+spring.datasource.password=Jise246808642
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
\ No newline at end of file
Index: .idea/DL2.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/frontend/dist\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/frontend/tmp\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/DL2.iml b/.idea/DL2.iml
--- a/.idea/DL2.iml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/.idea/DL2.iml	(date 1689857974592)
@@ -2,10 +2,7 @@
 <module type="JAVA_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <excludeFolder url="file://$MODULE_DIR$/frontend/dist" />
-      <excludeFolder url="file://$MODULE_DIR$/frontend/tmp" />
-    </content>
+    <content url="file://$MODULE_DIR$" />
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/DL2.iml\" filepath=\"$PROJECT_DIR$/.idea/DL2.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/UserService/src/main/main.iml\" filepath=\"$PROJECT_DIR$/UserService/src/main/main.iml\" />\r\n      <module fileurl=\"file://$PROJECT_DIR$/UserService/src/test/test.iml\" filepath=\"$PROJECT_DIR$/UserService/src/test/test.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/.idea/modules.xml	(date 1689857974592)
@@ -3,8 +3,6 @@
   <component name="ProjectModuleManager">
     <modules>
       <module fileurl="file://$PROJECT_DIR$/.idea/DL2.iml" filepath="$PROJECT_DIR$/.idea/DL2.iml" />
-      <module fileurl="file://$PROJECT_DIR$/UserService/src/main/main.iml" filepath="$PROJECT_DIR$/UserService/src/main/main.iml" />
-      <module fileurl="file://$PROJECT_DIR$/UserService/src/test/test.iml" filepath="$PROJECT_DIR$/UserService/src/test/test.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: UserService/src/main/java/com/dl2/userservice/Repository/UserPaperRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dl2.userservice.Repository;\r\n\r\nimport com.dl2.userservice.Entity.UserPaper;\r\nimport jakarta.transaction.Transactional;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.data.jpa.repository.Modifying;\r\nimport org.springframework.data.jpa.repository.Query;\r\nimport org.springframework.data.repository.query.Param;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport java.util.List;\r\n\r\n@Repository\r\npublic interface UserPaperRepository extends JpaRepository<UserPaper, Long> {\r\n    List<UserPaper> getUserPapersByUserIdAndPaperIdAndRating(Long userId, String paperId, Long rating);\r\n\r\n    @Transactional\r\n    @Modifying\r\n    @Query(value = \"\"\"\r\n            delete from user_paper\r\n            where userid = :userId and paperid = :paperId and rating = 2;\r\n            \"\"\", nativeQuery = true)\r\n    void deleteFavUserPaperByUserIdAndPaperId(Long userId, String paperId);\r\n\r\n    @Transactional\r\n    @Modifying\r\n    @Query(value = \"\"\"\r\n            insert into user_paper (userid, paperid, rating)\r\n            values (:userId, :paperId, 2);\r\n            \"\"\", nativeQuery = true)\r\n    void addFavUserPaperByUserIdAndPaperId(Long userId, String paperId);\r\n\r\n\r\n    @Transactional\r\n    @Modifying\r\n    @Query(value = \"\"\"\r\n            insert into user_paper (userid, paperid, rating)\r\n            values (:userId, :paperId, 1);\r\n            \"\"\", nativeQuery = true)\r\n    void addViewedUserPaperByUserIdAndPaperId(Long userId, String paperId);\r\n\r\n    @Query(value = \"\"\"\r\n            select * from user_paper\r\n            where userid = :userId and rating = 1\r\n            limit 5;\r\n            \"\"\", nativeQuery = true)\r\n    List<UserPaper> getRecentViewedPapersByUserId(Long userId);\r\n\r\n    @Query(value = \"\"\"\r\n            select * from user_paper\r\n            where userid = :userId and rating = 2\r\n            limit 5;\r\n            \"\"\", nativeQuery = true)\r\n    List<UserPaper> getRecentFavPapersByUserId(Long userId);\r\n\r\n    @Transactional\r\n    @Modifying\r\n    @Query(value = \"\"\"\r\n            delete from user_paper\r\n            where `id` = ?;\r\n            \"\"\", nativeQuery = true)\r\n    void deleteViewedUserPaperById(Long id);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UserService/src/main/java/com/dl2/userservice/Repository/UserPaperRepository.java b/UserService/src/main/java/com/dl2/userservice/Repository/UserPaperRepository.java
--- a/UserService/src/main/java/com/dl2/userservice/Repository/UserPaperRepository.java	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/UserService/src/main/java/com/dl2/userservice/Repository/UserPaperRepository.java	(date 1689842593868)
@@ -42,14 +42,14 @@
     @Query(value = """
             select * from user_paper
             where userid = :userId and rating = 1
-            limit 5;
+            order by id desc limit 5;
             """, nativeQuery = true)
     List<UserPaper> getRecentViewedPapersByUserId(Long userId);
 
     @Query(value = """
             select * from user_paper
             where userid = :userId and rating = 2
-            limit 5;
+            order by id limit 5;
             """, nativeQuery = true)
     List<UserPaper> getRecentFavPapersByUserId(Long userId);
 
Index: frontend/src/app/app.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\n\r\n// angular-material part\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\nimport { HomeComponent } from './home/home/home.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SearchbarComponent } from './searchbar/searchbar.component';\r\nimport { UserinfoComponent } from './home/userinfo/userinfo.component';\r\nimport { EditorComponent } from './editor/editor/editor.component';\r\nimport { FsComponent } from './editor/fs/fs.component';\r\nimport { TagbarComponent } from './editor/tagbar/tagbar.component';\r\nimport { PaperComponent } from './paper/paper.component';\r\nimport { LoginComponent } from './login/login/login.component';\r\nimport { SphereComponent } from './login/sphere/sphere.component';\r\nimport { RegisterComponent } from './login/register/register.component';\r\nimport { NotificationComponent } from './login/notification/notification.component';\r\nimport { LoadingComponent } from './loading/loading.component';\r\nimport { HighlightCapitalizedPipe } from './highlight-capitalized.pipe';\r\nimport { TopbarComponent } from './topbar/topbar.component';\r\nimport { SearchOverlayComponent } from './search-overlay/search-overlay.component';\r\nimport { PersonalComponent } from './personal/personal.component';\r\nimport { PaperInfoComponent } from './paper/paper-info/paper-info.component';\r\nimport { MethodsComponent } from './methods/methods.component';\r\nimport { TasksComponent } from './tasks/tasks.component';\r\nimport { TaskComponent } from './task/task.component';\r\nimport { MethodComponent } from './method/method.component';\r\n\r\n// routing\r\nconst appRoutes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: 'editor',\r\n    component: EditorComponent,\r\n  },\r\n  {\r\n    path: 'paper/:id',\r\n    component: PaperComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: PersonalComponent,\r\n  },\r\n  {\r\n    path: 'methods',\r\n    component: MethodsComponent,\r\n  },\r\n  {\r\n    path: 'tasks',\r\n    component: TasksComponent,\r\n  },\r\n  {\r\n    path: 'task/:task',\r\n    component: TaskComponent,\r\n  },\r\n  {\r\n    path: 'method/:method',\r\n    component: MethodComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SearchbarComponent,\r\n    UserinfoComponent,\r\n    EditorComponent,\r\n    FsComponent,\r\n    TagbarComponent,\r\n    PaperComponent,\r\n    LoginComponent,\r\n    SphereComponent,\r\n    RegisterComponent,\r\n    NotificationComponent,\r\n    LoadingComponent,\r\n    HighlightCapitalizedPipe,\r\n    TopbarComponent,\r\n    SearchOverlayComponent,\r\n    PersonalComponent,\r\n    PaperInfoComponent,\r\n    MethodsComponent,\r\n    TasksComponent,\r\n    TaskComponent,\r\n    MethodComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes),\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => localStorage.getItem('access_token'),\r\n        allowedDomains: ['*'],\r\n        disallowedRoutes: [],\r\n      },\r\n    }),\r\n    MarkdownModule.forRoot(),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatPaginatorModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/app.module.ts b/frontend/src/app/app.module.ts
--- a/frontend/src/app/app.module.ts	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/app.module.ts	(date 1689855899714)
@@ -3,7 +3,6 @@
 import { AppComponent } from './app.component';
 import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
 import { MarkdownModule } from 'ngx-markdown';
-
 // angular-material part
 import { MatToolbarModule } from '@angular/material/toolbar';
 import { MatInputModule } from '@angular/material/input';
@@ -17,6 +16,7 @@
 import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
 import { MatChipsModule } from '@angular/material/chips';
 import { MatPaginatorModule } from '@angular/material/paginator';
+import { FormsModule } from '@angular/forms';
 
 import { HomeComponent } from './home/home/home.component';
 import { JwtModule } from '@auth0/angular-jwt';
@@ -41,6 +41,7 @@
 import { TasksComponent } from './tasks/tasks.component';
 import { TaskComponent } from './task/task.component';
 import { MethodComponent } from './method/method.component';
+import { AfterComponent } from './login/after/after.component';
 
 // routing
 const appRoutes = [
@@ -62,6 +63,10 @@
     component: RegisterComponent,
   },
   {
+    path: 'after',
+    component: AfterComponent
+  },
+  {
     path: 'home',
     component: PersonalComponent,
   },
@@ -107,6 +112,7 @@
     TasksComponent,
     TaskComponent,
     MethodComponent,
+    AfterComponent,
   ],
   imports: [
     RouterModule.forRoot(appRoutes),
@@ -132,6 +138,7 @@
     MatProgressSpinnerModule,
     MatChipsModule,
     MatPaginatorModule,
+    FormsModule,
   ],
   providers: [],
   bootstrap: [AppComponent],
Index: frontend/src/app/methods/methods.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component } from '@angular/core';\r\nimport axios, { Method } from 'axios';\r\nimport Task, { TaskResponse } from '../tasks/task.model';\r\nimport { ServerService } from '../server.service';\r\nimport GenericResponse from '../GenericResponse.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-methods',\r\n  templateUrl: './methods.component.html',\r\n  styleUrls: ['./methods.component.scss']\r\n})\r\nexport class MethodsComponent {\r\n  public tasks: Task[] = [];\r\n  public length: number = 0;\r\n\r\n  async ngOnInit() {\r\n    const resp = await axios.get(ServerService.LoginServer + `/methods`);\r\n    const data: GenericResponse<TaskResponse> = resp.data;\r\n    this.tasks = data.data.tasks;\r\n    this.length = data.data.totalElements;\r\n  }\r\n\r\n  public async changPage(event: PageEvent) {\r\n    const index = event.pageIndex;\r\n    const size = event.pageSize;\r\n    console.log(index, size);\r\n    const resp = await axios.get(ServerService.LoginServer + `/methods?page=${index + 1}&size=${size}`);\r\n    const data: GenericResponse<TaskResponse> = resp.data;\r\n    this.tasks = data.data.tasks;\r\n    this.length = data.data.totalElements;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/methods/methods.component.ts b/frontend/src/app/methods/methods.component.ts
--- a/frontend/src/app/methods/methods.component.ts	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/methods/methods.component.ts	(date 1689840612541)
@@ -30,4 +30,7 @@
     this.tasks = data.data.tasks;
     this.length = data.data.totalElements;
   }
+  public goto(name: string) {
+    window.location.pathname = `/method/${name}`;
+  }
 }
Index: UserService/src/main/java/com/dl2/userservice/Service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dl2.userservice.Service;\r\n\r\nimport com.dl2.userservice.Entity.User;\r\nimport com.dl2.userservice.Entity.UserPaper;\r\nimport com.dl2.userservice.Repository.UserPaperRepository;\r\nimport com.dl2.userservice.Repository.UserRepository;\r\nimport jakarta.transaction.Transactional;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@Service\r\npublic class UserService {\r\n    @Autowired\r\n    private UserRepository repo;\r\n\r\n    @Autowired\r\n    private UserPaperRepository userPaperRepository;\r\n\r\n\r\n    private final BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();\r\n\r\n\r\n    @Transactional\r\n    public Optional<User> checkByNameAndPwd(String name, String pwd) {\r\n        Optional<User> user = repo.findUserByName(name);\r\n        boolean result = user.map(u -> {\r\n            return encoder.matches(pwd, u.getPassword());\r\n        }).orElse(false);\r\n        if (result) {\r\n            return user;\r\n        } else {\r\n            return Optional.empty();\r\n        }\r\n    }\r\n\r\n    @Transactional\r\n    public boolean checkByName(String name) {\r\n        Optional<User> user = repo.findUserByName(name);\r\n        return user.isPresent();\r\n    }\r\n\r\n    @Transactional\r\n    public Optional<User> getUserByName(String name) {\r\n        return repo.findUserByName(name);\r\n    }\r\n\r\n    @Transactional\r\n    public void register(User user) {\r\n        user.setPassword(encoder.encode(user.getPassword()));\r\n        repo.save(user);\r\n    }\r\n\r\n    @Transactional\r\n    public boolean checkByEmail(String email) {\r\n        Optional<User> user = repo.findUserByEmail(email);\r\n        return user.isPresent();\r\n    }\r\n\r\n    @Transactional\r\n    public void addUserFavorite(Long userId, String paperId) {\r\n        userPaperRepository.addFavUserPaperByUserIdAndPaperId(userId, paperId);\r\n    }\r\n\r\n    @Transactional\r\n    public void deleteUserFavorite(Long userId, String paperId) {\r\n        userPaperRepository.deleteFavUserPaperByUserIdAndPaperId(userId, paperId);\r\n    }\r\n\r\n    @Transactional\r\n    public void recordUserViewed(Long userId, String paperId) {\r\n        // first delete\r\n        List<UserPaper> userPapers = userPaperRepository.getRecentViewedPapersByUserId(userId);\r\n        if (userPapers.size() >= 5) {\r\n            userPaperRepository.deleteViewedUserPaperById(userPapers.get(4).getId());\r\n        }\r\n        // then add\r\n        // if exists, delete then insert\r\n        List<UserPaper> papers = userPaperRepository.getUserPapersByUserIdAndPaperIdAndRating(userId, paperId, 1L);\r\n        if (!papers.isEmpty()) {\r\n            userPaperRepository.deleteViewedUserPaperById(papers.get(0).getId());\r\n        }\r\n        userPaperRepository.addViewedUserPaperByUserIdAndPaperId(userId, paperId);\r\n    }\r\n\r\n    @Transactional\r\n    public boolean getUserFavourite(Long userId, String paperId) {\r\n        List<UserPaper> papers = userPaperRepository.getUserPapersByUserIdAndPaperIdAndRating(userId, paperId, 2L);\r\n        return !papers.isEmpty();\r\n    }\r\n\r\n    @Transactional\r\n    public List<UserPaper> getUserRecentViewed(Long userId) {\r\n        return userPaperRepository.getRecentViewedPapersByUserId(userId);\r\n    }\r\n\r\n    @Transactional\r\n    public List<UserPaper> getUserRecentFav(Long userId) {\r\n        return userPaperRepository.getRecentFavPapersByUserId(userId);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UserService/src/main/java/com/dl2/userservice/Service/UserService.java b/UserService/src/main/java/com/dl2/userservice/Service/UserService.java
--- a/UserService/src/main/java/com/dl2/userservice/Service/UserService.java	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/UserService/src/main/java/com/dl2/userservice/Service/UserService.java	(date 1689842477603)
@@ -74,9 +74,6 @@
     public void recordUserViewed(Long userId, String paperId) {
         // first delete
         List<UserPaper> userPapers = userPaperRepository.getRecentViewedPapersByUserId(userId);
-        if (userPapers.size() >= 5) {
-            userPaperRepository.deleteViewedUserPaperById(userPapers.get(4).getId());
-        }
         // then add
         // if exists, delete then insert
         List<UserPaper> papers = userPaperRepository.getUserPapersByUserIdAndPaperIdAndRating(userId, paperId, 1L);
Index: frontend/src/app/methods/methods.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><app-topbar />\r\n<div class=\"methods\">\r\n  <div class=\"method\" *ngFor=\"let task of tasks\">\r\n    <h2>{{task.name}} <span>with {{task.numPapers}} papers</span></h2>\r\n    <div class=\"pop\">\r\n      <span class=\"pop-title\">\r\n        Known to solve:\r\n      </span>\r\n      <span *ngFor=\"let method of task.methods; index as i\">\r\n        {{method}}<span *ngIf=\"i < task.methods.length - 1\">, </span>\r\n      </span>\r\n    </div>\r\n    <markdown katex *ngIf=\"task.intro.length\" class=\"intro\" [data]=\"task.intro.split('\\n')[0]\"></markdown>\r\n  </div>\r\n</div>\r\n<mat-paginator [length]=\"length\"\r\n              [pageSize]=\"10\"\r\n              [pageSizeOptions]=\"[10]\"\r\n              aria-label=\"Select page\"\r\n              (page)=\"changPage($event)\">\r\n</mat-paginator>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/methods/methods.component.html b/frontend/src/app/methods/methods.component.html
--- a/frontend/src/app/methods/methods.component.html	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/methods/methods.component.html	(date 1689840673070)
@@ -1,6 +1,6 @@
 <app-topbar />
 <div class="methods">
-  <div class="method" *ngFor="let task of tasks">
+  <div class="method" *ngFor="let task of tasks" (click)="this.goto(task.name)">
     <h2>{{task.name}} <span>with {{task.numPapers}} papers</span></h2>
     <div class="pop">
       <span class="pop-title">
Index: frontend/src/app/login/register/register.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport axios from 'axios';\r\nimport { ServerService } from 'src/app/server.service';\r\nimport Response from 'src/response.model';\r\nimport { Router } from '@angular/router';\r\nimport { SphereService } from '../sphere.service';\r\nimport { AuthService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements AfterViewInit {\r\n  @ViewChild('username') NameElement!: ElementRef<HTMLInputElement>;\r\n  @ViewChild('passwd') PasswordElement!: ElementRef<HTMLInputElement>;\r\n  @ViewChild('email') EmailElement!: ElementRef<HTMLInputElement>;\r\n\r\n  public constructor(\r\n    private authService: AuthService,\r\n    private sphereService: SphereService,\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.sphereService.render();\r\n  }\r\n\r\n  public nameValid = true;\r\n  public passValid = true;\r\n  public emailValid = true;\r\n  public univValid = true;\r\n  public nameUnique = true;\r\n  public emailUnique = true;\r\n\r\n  checkUser() {\r\n    this.nameUnique = true;\r\n    const content = this.NameElement.nativeElement.value;\r\n    if (content.length < 6) {\r\n      this.nameValid = false;\r\n    } else {\r\n      this.nameValid = true;\r\n    }\r\n  }\r\n\r\n  checkPassword() {\r\n    const content = this.PasswordElement.nativeElement.value;\r\n    // includes at least 1 number, 1 upper and 1 lower.\r\n    // and must be at least 6 chars long\r\n    const regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/;\r\n    if (!regex.test(content)) {\r\n      this.passValid = false;\r\n    } else {\r\n      this.passValid = true;\r\n    }\r\n  }\r\n\r\n  checkEmail() {\r\n    this.emailUnique = true;\r\n    const content = this.EmailElement.nativeElement.value;\r\n    if (!content.length) {\r\n      this.emailValid = true;\r\n      return;\r\n    }\r\n    // eslint-disable-next-line no-useless-escape\r\n    const regex = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z.]+$/;\r\n    if (!regex.test(content)) {\r\n      this.emailValid = false;\r\n    } else {\r\n      this.emailValid = true;\r\n    }\r\n  }\r\n\r\n  async signUp() {\r\n    this.checkEmail();\r\n    this.checkPassword();\r\n    this.checkUser();\r\n    if (\r\n      !this.nameValid ||\r\n      !this.passValid ||\r\n      !this.emailValid ||\r\n      !this.univValid\r\n    ) {\r\n      return;\r\n    }\r\n    const resp = await axios.post(\r\n      ServerService.LoginServer + '/user/register',\r\n      {\r\n        name: this.NameElement.nativeElement.value,\r\n        password: this.PasswordElement.nativeElement.value,\r\n        email: this.EmailElement.nativeElement.value,\r\n      }\r\n    );\r\n    const data: Response = resp.data;\r\n    if (data.code == 400) {\r\n      this.nameUnique = false;\r\n    } else if (data.code == 401) {\r\n      this.emailUnique = false;\r\n    }else if (data.code == 200) {\r\n      // store the user info in local storage\r\n      this.authService.setToken(data.data);\r\n      window.location.pathname = '/';\r\n    }\r\n  }\r\n\r\n  public gotoLogin() {\r\n    window.location.pathname = '/login';\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/app/login/register/register.component.ts b/frontend/src/app/login/register/register.component.ts
--- a/frontend/src/app/login/register/register.component.ts	(revision 9494f1800498923ba54eca0808cb15f01050661c)
+++ b/frontend/src/app/login/register/register.component.ts	(date 1689851049631)
@@ -98,7 +98,7 @@
     }else if (data.code == 200) {
       // store the user info in local storage
       this.authService.setToken(data.data);
-      window.location.pathname = '/';
+      window.location.pathname = '/after';
     }
   }
 
